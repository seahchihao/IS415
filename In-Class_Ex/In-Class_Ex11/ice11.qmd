---
title: "In-Class Exercise 11"
author: "Seah Chi Hao"
date: 2024-11-04
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
  output: true
  warning: false
---

## 1.0 Installing and Loading the R Packages

Install the following packages:

- tidyverse
- sf
- tmap
- httr
- performance

```{r}
pacman::p_load(tidyverse, sf, tmap, httr, performance)
```

## 2.0 Importing the Data
```{r}
folder_path <- "data/aspatial"
file_list <- list.files(path = folder_path, 
                        pattern = "^realis.*\\.csv$", 
                        full.names = TRUE)

realis_data <- file_list %>%
  map_dfr(read_csv)
```

## 3.0 Wangling data
```{r}
condo_resale <- realis_data %>%
  mutate(`Sale Date` = dmy(`Sale Date`)) %>%
  filter(`Type of Sale` == "Resale" &
           `Property Type` == "Condominium")
```

## 4.0 Geocoding

### 4.1 Preparing Data
```{r}
postcode <- unique(condo_resale$`Postal Code`)
```

### 4.2 Geocoding
```{r}
url <- "https://onemap.gov.sg/api/common/elastic/search"
found <- data.frame()
not_found <- data.frame()

for (postcode in postcode){
  query <- list('searchVal'=postcode, 'returnGeom'='Y', 
                'getAddrDetails'='Y', 'pageNum'='1')
  res <- GET(url, query=query)
  if ((content(res)$found)!=0){
    found <- rbind(found, data.frame(content(res))[4:13])
  } else {not_found = data.frame(postcode)
  }
}
```

### 4.3 Tidying field names
```{r}
found <- found %>%
  select(c(6:8)) %>%
  rename(POSTAL = `results.POSTAL`,
         XCOORD = `results.X`,
         YCOORD = `results.Y`)
```

## 5.0 Converting to Point Feature Data Frame

### 5.1 Joining tables
```{r}
condo_resale_geocoded = left_join(
  condo_resale, found, 
  by = c('Postal Code' = 'POSTAL'))
```

### 5.2 COnverting to sf
```{r}
condo_resale_sf <- st_as_sf(condo_resale_geocoded, 
                            coords = c("XCOORD",
                                       "YCOORD"),
                            crs=3414)
```

## 6.0 Cleaning Spatial Data

### 6.1 Checking for overlapping point feature
```{r}
overlapping_points <- condo_resale_sf %>%
  mutate(overlap = lengths(st_equals(., .)) > 1)
```

### 6.2 Spatial jittering
```{r}
condo_resale_sf <- condo_resale_sf %>%
  st_jitter(amount = 2)
```