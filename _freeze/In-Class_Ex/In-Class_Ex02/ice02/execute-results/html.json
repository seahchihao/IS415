{
  "hash": "55071c889077fa9651a24a79559b6670",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class Exercise 02\"\nauthor: \"Seah Chi Hao\"\ndate: 2024-08-26\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  output: true\n  warning: false\n\n---\n\n\n### The Code\n\n::: {style=\"font-size: 1.50em\"}\nThis code chunk imports shapefile.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\npackage 'glue' successfully unpacked and MD5 sums checked\npackage 'rlang' successfully unpacked and MD5 sums checked\npackage 'tidyr' successfully unpacked and MD5 sums checked\npackage 'ggstatsplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\0seah\\AppData\\Local\\Temp\\RtmpqEKhgv\\downloaded_packages\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf) # wrapper of basic R function (similar to importing package)\n\n# \"=\" also works but \"<-\" works for both windows and linux\nmpsz14_shp <- st_read(dsn = \"data/\",\n                      layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\0seah\\SMU\\AY24-25 T1\\IS415\\IS415\\In-Class_Ex\\In-Class_Ex02\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\nThis code chunk imports kml file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_kml <- st_read(\"data/MasterPlan2014SubzoneBoundaryWebKML.kml\")\n# it did not work, if want kml can generate kml from shp (see below)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz14_shp,\n         \"data/MP14_SUBZONE_WEB_PL.kml\", #able to write from shp to kml/geojson\n         delete_dsn = TRUE) # this part not necessary BUT make sure delete original file before running (aka remove duplicates/dataset that already exist)\n```\n:::\n\n\n:::\n:::\n\n## Working with Master Plan 2019 Subzone Boundary Data\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/MPSZ-2019\",\n                      layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\0seah\\SMU\\AY24-25 T1\\IS415\\IS415\\In-Class_Ex\\In-Class_Ex02\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/MPSZ-2019\",\n                      layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\0seah\\SMU\\AY24-25 T1\\IS415\\IS415\\In-Class_Ex\\In-Class_Ex02\\data\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n{r}\n# python use panda (a package for data analytics), R use tidyverse (family of packages for data analytics)\npopdata2023 <- popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise('POP'=sum('Pop')) %>%\n  ungroup() %>%\n  pivot_wider(names_from=AG,\n              values_from = POP)\n\ncolnames(popdata2023)\n\n\n{r}\npopdata2023 <- popdata2023 %>%\n  group_by(PA, SZ, AG) %>%\n  summarise('POP'=sum('Pop'))\n\n\n{r}\nmpsz_pop2023 <- left_join(mpsz19_shp, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n::: panel-tabset\n### The task\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}